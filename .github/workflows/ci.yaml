name: CI/CD Pipeline for OpenOlat

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  packages: write
  contents: read

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/openolat"
  BRANCH_NAME: ${{ github.ref_name }}
  LATEST_TAG: latest
  VERSION_TAG: 19.1

jobs:
  build-push-docker:
    if: github.ref_name == 'main' || github.ref_name == 'dev'
    runs-on: ubuntu-latest
    steps:
      # 📦 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 🚀 Get Version from olat.properties
      - name: Get Version from olat.properties
        run: |
          VERSION=$(grep '^build.version' src/main/resources/serviceconfig/olat.properties | cut -d'=' -f2)
          echo "VERSION_TAG=$VERSION" >> $GITHUB_ENV

      # 🛠 Docker Setup & Build
      - name: Set Up Docker
        uses: docker/setup-buildx-action@v3

      # 🔐 Login to GitHub Container Registry (Docker)
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      # 🚀 Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME}}-${{ env.LATEST_TAG }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME}}-${{ env.LATEST_TAG }}

  build-push-helm:
    if: github.ref_name == 'main' || github.ref_name == 'dev'
    runs-on: ubuntu-latest
    steps:
      # 📦 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 📦 Helm Chart Packaging
      - name: Package Helm Chart
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm dependency update openolat
          helm lint openolat
          helm package openolat
          mv *.tgz chart.tgz

      # 🔐 Login to GitHub Container Registry (Helm)
      - name: Login to GitHub Container Registry for Helm
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username "${{ github.actor }}" --password-stdin

      # 🚀 Push Helm Chart
      - name: Push Helm Chart to GitHub Container Registry
        run: helm push chart.tgz oci://${{ env.IMAGE_NAME }}